# Database connection for when running with Docker Compose (or explicit local setup)
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=rabbithole_user
quarkus.datasource.password=mysecretpassword
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5433/rabbithole_db

quarkus.rest-client.proxmox-api.url=https://192.168.1.32:8006
quarkus.rest-client.proxmox-api.scope=all
quarkus.rest-client.logging.scope=request-response
quarkus.rest-client.logging.body-limit=1000
# Set logging level for the rest client category to DEBUG to see more details
quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG
quarkus.log.console.level=DEBUG

quarkus.tls.trust-all=true
quarkus.rest-client.extensions-api.tls-configuration-name=tls-disabled
quarkus.tls.tls-disabled.trust-all=true
quarkus.tls.tls-disabled.hostname-verification-algorithm=NONE

# Proxmox API Token Credentials
proxmox.api.user=rabbithole-api
proxmox.api.realm=pve
proxmox.api.token.id=backend-orchestrator-token
proxmox.api.token.secret=20789396-6aad-457c-a464-c5c13aac3255

quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:5173,http://127.0.0.1:5173
quarkus.http.cors.headers=Accept,Content-Type,X-Requested-With,Authorization
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS

quarkus.hibernate-orm.log.sql=true # Log generated SQL statements
# quarkus.hibernate-orm.sql-load-script=import.sql # For initial data loading (optional)
# Database schema generation strategy (for development)
# 'update' will create/update tables. Use 'none' or 'validate' for production.
quarkus.hibernate-orm.database.generation=update

rabbithole.vm.ssh.public-key-path=c:/Users/Copi-R/.ssh/rabbithole_vm_ssh_key.pub